pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--player
p1={}

--globals
g=
{
 grav=0.4, -- gravity per frame
 maxdy=5,
 maxjumpframe=8,
 -- we move to another screen after camshft pixels
 -- this allows the final block on a screen to be displayed
 -- as the first block on the next screen.
 camshft=120,
 max_flowers=0,
 finished=false
}

--camera
c=
{
 x=0,
 y=0
}

keys={}
enemies={}

function _init()
 build_dynamic_items()
end

function _update()
 player_update(p1)
 foreach(enemies, enemy_update)
end

function _draw()
 cls() --clear the screen
 camera(c.x, c.y)
 map()
 actor_draw(p1)
 foreach(enemies, actor_draw)
 foreach(keys, key_draw)
 	
 if p1.isdead then
  print("game over",c.x+50,c.y+60,8)
 end
 if g.finished then
  print("done game",c.x+50,c.y+60,12)
 end
end

function range_overlaps(a1,a2,b1,b2)
 if a1>=b1 and a1<b2 then
  return true
 elseif a2>=b1 and a2<b2 then
  return true
 end
 return false
end

function items_colliding(a,b)
 return range_overlaps(a.x,a.x+8,b.x,b.x+8) and
  range_overlaps(a.y,a.y+8,b.y,b.y+8)
end

function player_jump(p)
 --if on the ground and the
 --user presses x,c,or,up...
 local jumppressednew = (btn(2) or btn(4) or btn(5))
 if jumppressednew and not p.jumppressed then
  if p.isgrounded then
   p.dy=-p.jumpvel
   p.jumpframe=1
   sfx(2)
  end
 elseif jumppressednew then
  if p.jumpframe>0 then
   p.dy=-p.jumpvel
   p.jumpframe+=1
   if p.jumpframe>=g.maxjumpframe then
    p.jumpframe=0
   end
  end
 else
  p.jumpframe=0
 end
 p.jumppressed = jumppressednew
end

function player_anim(p)
 
 if p.isdead then
  p.spr_index = 1
  p.spr_table=p.spr_dead
  return
 end
 
 if p.isgrounded ~= p.isgrounded_last then
  if not p.isgrounded then
   p.spr_table=p.spr_jump
  end
  p.spr_index=1
  p.spr_time=0
 end
 
 if p.isgrounded then
  local last_table=p.spr_table
	 if p.dx == 0 then
   p.spr_table=p.spr_stand
	 else
   p.spr_table=p.spr_walk
   p.spr_reverse=(p.dx<0)
		end
		if last_table~=p.spr_table then
		 p.spr_index=1
		end
 end
  
 actor_anim(p)
end

function player_update(p)

 if p.isdead then return end
 if g.finished then return end
 
 --remember where we started
 local startx=p1.x
 
 player_jump(p1)
   
 --walk
 --
   
 p1.dx=0
 if btn(0) then --left
  p1.dx=-2
 end
 if btn(1) then --right
  p1.dx=2
 end
   
 --move the player left/right
 p1.x+=p1.dx
   
 --hit side walls
 --
   
 --check for walls in the
 --direction we are moving.
 local xoffset=0
 if p1.dx>0 then xoffset=7 end
   
 --look for a wall
 local h=mget((p1.x+xoffset)/8,(p1.y+7)/8)
 if fget(h,0) then
  --they hit a wall so move them
  --back to their original pos.
  --it should really move them to
  --the edge of the wall but this
  --mostly works and is simpler.
  p1.x=startx
 end
   
 --accumulate gravity
 p1.dy+=g.grav
 if p1.dy > g.maxdy then p1.dy=g.maxdy end
   
  --fall
  p1.y+=p1.dy

  --hit floor
  --
   
  --check bottom center of the
  --player.
  local v=mget((p1.x+4)/8,(p1.y+8)/8)
   
  --assume they are floating 
  --until we determine otherwise
  p1.isgrounded=false
   
  --only check for floors when
  --moving downward
  if p1.dy>=0 then
   --look for a solid tile
   if fget(v,0) then
    --place p1 on top of tile
    p1.y = flr((p1.y)/8)*8
    --halt velocity
    p1.dy = 0
    --allow jumping again
    p1.isgrounded=true
   end
  end
   
  --hit ceiling
  --
   
  --check top center of p1
  v=mget((p1.x+4)/8,(p1.y)/8)
   
  --only check for ceilings when
  --moving up
  if p1.dy<=0 then
   --look for solid tile
   if fget(v,0) then
    --position p1 right below
    --ceiling
    p1.y = flr((p1.y+8)/8)*8
    --halt upward velocity
    p1.dy = 0
   end
  end
  
  check_flower_collision()
   
  foreach(enemies, check_enemy_collision)
    
  -- move the camera to another screen if necessary
  if p1.y>=(c.y+g.camshft) then c.y+=g.camshft end
  if p1.y<(c.y) then c.y-=g.camshft end
  if p1.x>=(c.x+g.camshft) then c.x+=g.camshft end
  if p1.x<(c.x) then c.x-=g.camshft end
  
  for i=1,#keys do key_check_collision(keys[i],p1) end
  player_anim(p1)
  p1.isgrounded_last=p1.isgrounded
end

--box to box intersection
function intersects_box_box(
	x1,y1,
	w1,h1,
	x2,y2,
	w2,h2)

	local xd=x1-x2
	local xs=w1*0.5+w2*0.5
	if abs(xd)>=xs then return false end

	local yd=y1-y2
	local ys=h1*0.5+h2*0.5
	if abs(yd)>=ys then return false end
	
	return true
end

function check_enemy_collision(e)
 if intersects_box_box(p1.x,p1.y,8,8,e.x,e.y,8,8) then
   p1.isdead=true
 end
end

function check_flower_collision()
 tile=mget((p1.x+4)/8,(p1.y+4)/8)
  
 if tile == 20 then
  mset((p1.x+4)/8,(p1.y+4)/8,0)
  p1.flowers_found += 1
 end
 
 if p1.flowers_found == g.max_flowers then
  g.finished = true
 end
end

function enemy_update(e)
 --remember where we started
 local startx=e.x
   
 --move the player left/right
 e.x+=e.dx
   
 --hit side walls
 --
   
 --check for walls in the
 --direction we are moving.
 local xoffset=0
 if e.dx>0 then xoffset=7 end
   
 --look for a wall
 local h=mget((e.x+xoffset)/8,(e.y+7)/8)
 if fget(h,0) then
  --they hit a wall so move them
  --back to their original pos.
  --it should really move them to
  --the edge of the wall but this
  --mostly works and is simpler.
  e.x=startx
  e.dx=e.dx*-1
  if e.dx<0 then e.spr_reverse=true else e.spr_reverse=false end
 end
   
 --accumulate gravity
 e.dy+=g.grav
 if e.dy > g.maxdy then e.dy=g.maxdy end
   
  --fall
  e.y+=e.dy

  --hit floor
  --
   
  --check bottom center of the
  --player.
  local v=mget((e.x+4)/8,(e.y+8)/8)
   
  --assume they are floating 
  --until we determine otherwise
  e.isgrounded=false
   
  --only check for floors when
  --moving downward
  if e.dy>=0 then
   --look for a solid tile
   if fget(v,0) then
    --place p1 on top of tile
    e.y = flr((e.y)/8)*8
    --halt velocity
    e.dy = 0
    --allow jumping again
    e.isgrounded=true
   end
  end
   
  --hit ceiling
  --
   
  --check top center of p1
  v=mget((e.x+4)/8,(e.y)/8)
   
  --only check for ceilings when
  --moving up
  if e.dy<=0 then
   --look for solid tile
   if fget(v,0) then
    --position p1 right below
    --ceiling
    e.y = flr((e.y+8)/8)*8
    --halt upward velocity
    e.dy = 0
   end
  end
  
  actor_anim(e)
end

function actor_anim(a)
 a.spr_time+=1
 if a.spr_time > a.spr_time_max then
  a.spr_time=0
  a.spr_index+=1
  if a.spr_index > #a.spr_table then
   a.spr_index=1
  end
 end
end

function actor_draw(a)
 spr(a.spr_table[a.spr_index],a.x,a.y,1,1,a.spr_reverse)
end

function key_check_collision(key,p)
 if items_colliding(key,p) then
  key.is_held=true
  fset(key.door_spr,0,false)
 end
end

function key_draw(key)
 if not key.is_held then
  spr(key.spr,key.x,key.y)
 end
end
-->8
function build_dynamic_items()
 for mapx=0,127 do
	 for mapy=0,32 do
	  sprite = mget(mapx,mapy)
	  if sprite == 1 then
 	  mset(mapx,mapy,0)
 	  p1=make_player(mapx,mapy)
	  elseif sprite == 4 then
 	  mset(mapx,mapy,0)
				add(enemies,make_enemy1(mapx,mapy))
	  elseif sprite == 7 then
 	  mset(mapx,mapy,0)
				add(enemies,make_enemy2(mapx,mapy))
	  elseif sprite == 5 then
 	  mset(mapx,mapy,0)
				add(keys,make_key(mapx,mapy,5,6))
	  elseif sprite == 9 then
 	  mset(mapx,mapy,0)
				add(keys,make_key(mapx,mapy,9,10))
	  elseif sprite == 20 then
	   g.max_flowers+=1
	  end
 	end
 end
end

function make_player(mapx,mapy)
	return {
	 --position
	 x=mapx*8,    
	 y=mapy*8,
	 --velocity
	 dx=0,
	 dy=0,
	 
	 spr_stand={1},
	 spr_walk={16,17},
	 spr_jump={1},
	 spr_dead={32},
	 
	 spr_index=1,
	 spr_table={}, -- must be set before drawing
	 spr_time=0,
	 spr_time_max=4,
	 spr_reverse=false,
	   
	 --is the player standing on
	 --the ground. used to determine
	 --if they can jump.
	 isgrounded=false,
	 isgrounded_last=true,
	
	 --tuning constants
	
	 jumpvel=3.1,
	 jumpframe=0,
	 jumppressed=false,
	 isdead=false,
	 
	 flowers_found=0
	}
end

function make_enemy_default(mapx,mapy)
	return {
	 x=mapx*8,    
	 y=mapy*8,
	 dx=-1,
	 dy=0,
	 spr_index=1,
	 spr_table={0},
	 spr_time=0,
	 spr_time_max=4,
	 spr_reverse=true,
	}
end

function make_enemy1(mapx,mapy)
 e = make_enemy_default(mapx,mapy)
 e.spr_table={4}
 return e
end

function make_enemy2(mapx,mapy)
 e = make_enemy_default(mapx,mapy)
 e.spr_table={7,8}
 return e
end

function make_key(mapx,mapy,keyspr,doorspr)
	return {
		x=mapx*8,
		y=mapy*8,
		spr=keyspr,
		door_spr=doorspr,
		is_held=false,
	}
end
__gfx__
0000000000888880440444cc0000000000ceec00009900000999999000ccccc00ccccc0000bb00000bbbbbb00000000000000000000000000000000066566666
00000000008c0c80400004cc000000000cccccc0009990000900009000c000c00cc0cc0000bbb0000b0000b00000000000000000000000000000000066566666
00700700008000804cc0c4cc00000000cc9cc9cc009900000900009000cc0cc00c000c0000bb00000b0000b00000000000000000000000000000000055555555
00077000008bbb8040cc044c00000000bccccccb009990000900009000c044c00c444c0000bbb0000b0000b00000000000000000000000000000000066666566
00077000008888804bbbb40c00000000bcc8c8cb009900000900099000ccccc00c8ccc0000bb00000b000bb00000000000000000000000000000000066666566
0070070000400040b0000b0c00000000cc8c8ccc099990000900009000040040008088000bbbb0000b0000b00000000000000000000000000000000055555555
0000000000400040b0000b0c000000000cccccc0099990000900009000084400000840000bbbb0000b0000b00000000000000000000000000000000066566666
0000000000440044bb000bbc0000000000cccc000099000009999990000888800004400000bb00000bbbbbb00000000000000000000000000000000066566666
00888880008888800bbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
008c0c80008c0c80b44442444444424b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0080008000800080b44244444442444b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
008bbb80008bbb80b44424444444244b000a00004444000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0088888000888880b44424244444242b00aaa0004488400000000000000000000000000000000000000000000000000000000000000000000000000000000000
0040040000400040b24424244244242b000b00004088040000000000000000000000000000000000000000000000000000000000000000000000000000000000
0040044400444040b44424444444244b000b00000444400000000000000000000000000000000000000000000000000000000000000000000000000000000000
0044000000000044b44444444444444b000b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000b44444444444444b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0808080400000000b44442444444424b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000400000000b44244444442444b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8888844400000000b44424444444244b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8c0b800000000000b44424244444242b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
800b808000000000b24424244244242b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8c0b800400000000b44424444444244b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8888844400000000b44444444444444b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000bbbbbbbb4444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000444442444444424400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000444244444442444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000444424444444244400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000444424244444242400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000424424244244242400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000444424444444244400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000100000001000000000100000101000000000000000000000000000001010000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0707070707070000000000000000000f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f00000000000000000000000000000000000707070707070707070707070707070707070707070707070707070707070f0f0707070707070000000000000000000f0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0000000000000000000000000000000000070707070707070707070707070707070707070707070707070707070707070f0707070707070000000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000070707070707070700000000000000000000000000000000000000000000000000000000000000
0f00000000000000000000000000000000050707070707070707070707070707070707070707070707070707070f0707070f07070707070700000000000000000000000f000000000000000000000000000000000000000000070707070707070700000000000000000000000000000000000000000000000000000000000000
0f00000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0707070607070707070700000400000000000000000f000000000000000000000000000000000000000000070707070707070700000000000000000000000000000000000000000000000000000000000000
0f0000000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000f0f070707070707070707070f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0000000a000000000000000000000000000000000f0f0f0f0f0f0f0f0f0f0f07070000000000000000000000000000000000000000000000000000000000000f
0f00000f0f0f0f0f0f000f0f0f0f0f0f0f0000000000000f0f0f000f0f000f00000000000000070707070707070707070707070707070707000000000000000f0f0f0f0f0000000000000000000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0700000000000000000000000000000000000000000000000000000000000f
0f0100000000000000000000000000000007000000000000000f0f0f0f0f0f0f0f0f0f000000070707070f0f0f0f0f0f0707070707070707000000000000000f000f0f0f0f0f0f0000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000f0f0f000000000000000000000000000f
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000f070707070f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0000000f000000000f0000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000f0f00000f0000000000000000000000000f
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000f00000000000f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0000000f0f0000000f0f00000f0f00000000000000000000000f
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000f0f0f000f0f0f0f0f0f0f0f0f0f000000000f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000f0f0f00000f0000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000f000f0f0f0000000f0f000000000000000000000f
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000f0f0f000000000f0f0f0f0f0f0000000f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000f0f0f0f0f0000000000000f000f000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000f0f0f0f0f00000000000f0000000000000000000f
0000000000000000000e0000000000000000000000000000000f000f0f0f0f0f0f00000f0f0f0f0f0f0f0f0f0f0f0000000000000000070000000f0f0f0f0f0f00000f000f0f0f0f0f000f000f000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000f00000000000000000f
00000000000000000000000000000000000000000000000f000f00000000000f0f00000f0f0f0f0f0f0f0f0f0f0f0000000f0f0f0f0f0f0f0f0f000000000f0f00000f00000f0000040000090f000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000f0f000000000000000f
000000000000000000000000000000000000000000000000000f00000000000f0000000f0f0f0f0f0f0f0f0f0f0f00000f000000000000000000000000000f0000000f0000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000f0f0f0000000000000f
000000000000000000000000000000000000000000000000000000000000000f00000f0000000000000000000000000f00000000000000000000000000000f0000000f000000000f0000000f0f000f0f0f000f000000000000000f0f0f0f0f0f0f0f0f0f0f0f0000000000000000000000000000000f0f0f000f00000000000f
000000000000000000000000000000000000000000000000000000000000000f00000000000000000000000000000f0000000000000000000000000000000f0000000f000000000f0000000f00000f000f000f0000000000000000000000000f0f0f0f0f0f0f0000000000000000000000000f0f0f0f0f0f000000000000000f
000000000000000000000000000000000000000000000000000000000000000f000000000000000000000000000f000000000000000000000000000000000f0000000f000000000f0000000f00000f000f000f000000000000000000000000000000000f0f0f0f00000000000000000000000f0f0f0f0f0f141414141414140f
000000000000000000000000000000000000000000000000000000000000000f0f00000000000000000000000f000000000000000000000000000000000f0f0000000f000000000f00000f0f00000f000f000f0f0000000000000000000000000000000000000000000000000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f
000000000000000000000000000000000000000000000000000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f0f0f0f0f0f0f0f0f0f0f0f0000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f0f0f0f0f0f0f0000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f0f000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0110000027050200501605016050170501f050190502e050230502b0500f05016050150501f05011050120500d05013050100500a0500c0500e0500e0500b0500e0503e0503405029050122503a150111503f150
000800002e05013050120501f05021050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000c0000210502105000000210500000021050000002405029000210502105000000000001c0501c05000000000001c050000001f050000001c050000001f0501f05000000000000000000000000000000000000
002d00002105021050000002105000000210500000024050290002105021050000002605026050000002705027050000002805028050000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0010000000000070500b050100501d0503b2503c250202502a2503c25036250202502c2503325007250092500c2500e25011250302501b2501005018050212502d2500d3502f2503f25019250052502135004350
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000003c0503c050360503b0502a050260501f0502205016050200500c0500b05027050290502a0502c0502c05035050250501d05018050180501e05022f501a0500f0501605017050170500f0500c05009050
__music__
00 06444344
00 04024344

